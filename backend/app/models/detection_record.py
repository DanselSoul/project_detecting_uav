from sqlalchemy import Column, Integer, Boolean, DateTime, ForeignKey, String
from datetime import datetime
from backend.app.db import Base

class DetectionRecord(Base):
    __tablename__ = "detection_records"
    id = Column(Integer, primary_key=True, index=True)
    cam = Column(Integer, nullable=False)
    track_id = Column(Integer, nullable=False)  # üîπ –ì–ª–æ–±–∞–ª—å–Ω—ã–π ID –æ–±—ä–µ–∫—Ç–∞
    detected = Column(Boolean, nullable=False)
    timestamp = Column(DateTime, default=datetime.utcnow)
    is_validated = Column(Boolean, default=False)  # üîπ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –ª–∏

class ValidationRecord(Base):
    __tablename__ = "validation_records"
    id = Column(Integer, primary_key=True, index=True)
    detection_id = Column(Integer, ForeignKey("detection_records.id"), nullable=False)
    validated = Column(Boolean, nullable=False)  # True / False
    track_id = Column(Integer, nullable=False)   # üîπ –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π track_id
    camera_id = Column(Integer, nullable=False)  # üîπ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π cam
    decision_source = Column(String, default="operator")  # üîπ –æ—Ç –∫–æ–≥–æ —Ä–µ—à–µ–Ω–∏–µ
    comment = Column(String, nullable=True)      # üîπ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—è—Å–Ω–µ–Ω–∏–µ
    timestamp = Column(DateTime, default=datetime.utcnow)
